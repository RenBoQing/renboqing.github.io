<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Day03-1-7-Java-基础学习-流程控制语句</title>
    <link href="/2023/01/07/Day03-1-7-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
    <url>/2023/01/07/Day03-1-7-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Day03-1-7-Java-基础学习-流程控制语句"><a href="#Day03-1-7-Java-基础学习-流程控制语句" class="headerlink" title="Day03-1-7-Java-基础学习-流程控制语句"></a>Day03-1-7-Java-基础学习-流程控制语句</h1><h2 id="1-顺序结构"><a href="#1-顺序结构" class="headerlink" title="1.顺序结构"></a>1.顺序结构</h2><blockquote><p>顺序结构语句是Java程序默认的执行流程，按照代码的先后顺序，从上到下依次执行</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107155044748.png" alt="image-20230107155044748"></p><h2 id="2-分支结构"><a href="#2-分支结构" class="headerlink" title="2.分支结构"></a>2.分支结构</h2><h3 id="1-if语句结构"><a href="#1-if语句结构" class="headerlink" title="1.if语句结构"></a>1.if语句结构</h3><h4 id="1-if结构第一种格式"><a href="#1-if结构第一种格式" class="headerlink" title="1.if结构第一种格式"></a>1.if结构第一种格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107155341538.png" alt="image-20230107155341538"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IfDemo</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;开始&quot;</span>);<br><span class="hljs-comment">//定义两个变量</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br><span class="hljs-comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span><br><span class="hljs-keyword">if</span>(a == b) &#123;<br>System.out.println(<span class="hljs-string">&quot;a等于b&quot;</span>);<br>&#125;<br><span class="hljs-comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span><br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(a == c) &#123;<br>System.out.println(<span class="hljs-string">&quot;a等于c&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;结束&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>1.大括号的开头可以另起一行书写，但是建议写在第一行的末尾</p><p>2.在语句体中,如果只有一句代码，大括号可以省略不写<br>3,如果对一个布尔类型的变量进行到断，不要用–号 直接将变量写在小括号中</p></blockquote><h4 id="2-if结构第二种格式"><a href="#2-if结构第二种格式" class="headerlink" title="2.if结构第二种格式"></a>2.if结构第二种格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107161015419.png" alt="image-20230107161015419"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1.键盘录入一个整数。表示身上的钱。</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入一个整数表示身上的钱&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">money</span> <span class="hljs-operator">=</span> sc.nextInt();<br><span class="hljs-comment">//2.对钱进行判断</span><br><span class="hljs-keyword">if</span>(money &gt;= <span class="hljs-number">100</span>)&#123;<br>    System.out.println(<span class="hljs-string">&quot;吃网红餐厅&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;福建大酒店&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>斯坦福练习题</p><p>​在实际开发中，电影院选座也会使用到if判断。假设某影院售卖了100张票，票的序号为1~100。其中奇数票号坐左侧，偶数票号坐右侧。键盘录入一个整数表示电影票的票号。根据不同情况，给出不同的提示：</p><p>如果票号为奇数，那么打印坐左边。</p><p>如果票号为偶数，那么打印坐右边。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//分析：</span><br><span class="hljs-comment">//1.键盘录入票号</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入票号&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">ticket</span> <span class="hljs-operator">=</span> sc.nextInt();<br><span class="hljs-keyword">if</span>(ticket &gt;= <span class="hljs-number">1</span> &amp;&amp; ticket &lt;= <span class="hljs-number">100</span>)&#123;<br>    <span class="hljs-comment">//合法</span><br>    <span class="hljs-comment">//2.对票号进行判断</span><br>    <span class="hljs-keyword">if</span> (ticket % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">//偶数</span><br>        System.out.println(<span class="hljs-string">&quot;坐右边&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//奇数</span><br>        System.out.println(<span class="hljs-string">&quot;坐左边&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-comment">//票号不合法</span><br>    System.out.println(<span class="hljs-string">&quot;票号不合法&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-if结构第三种格式"><a href="#3-if结构第三种格式" class="headerlink" title="3.if结构第三种格式"></a>3.if结构第三种格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107162142619.png" alt="image-20230107162142619"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107162248569.png" alt="image-20230107162248569"></p><blockquote><p>小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，</p><p>假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p><p>分析：</p><p>​①小明的考试成绩未知，可以使用键盘录入的方式获取值</p><p>​②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p><p>​③为每种判断设置对应的条件</p><p>​④为每种判断设置对应的奖励</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//95~100 自行车一辆</span><br><span class="hljs-comment">//90~94   游乐场玩一天</span><br><span class="hljs-comment">//80 ~ 89 变形金刚一个</span><br><span class="hljs-comment">//80 以下  胖揍一顿</span><br><br><span class="hljs-comment">//1.键盘录入一个值表示小明的分数</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入小明的成绩&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">score</span> <span class="hljs-operator">=</span> sc.nextInt();<br><span class="hljs-comment">//2.对分数的有效性进行判断</span><br><span class="hljs-keyword">if</span>(score &gt;= <span class="hljs-number">0</span> &amp;&amp; score &lt;= <span class="hljs-number">100</span>)&#123;<br>    <span class="hljs-comment">//有效的分数</span><br>    <span class="hljs-comment">//3.对小明的分数进行判断，不同情况执行不同的代码</span><br>    <span class="hljs-keyword">if</span>(score &gt;= <span class="hljs-number">95</span> &amp;&amp; score &lt;= <span class="hljs-number">100</span>)&#123;<br>        System.out.println(<span class="hljs-string">&quot;送自行车一辆&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score &gt;= <span class="hljs-number">90</span> &amp;&amp; score &lt;= <span class="hljs-number">94</span>)&#123;<br>        System.out.println(<span class="hljs-string">&quot;游乐场玩一天&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score &gt;= <span class="hljs-number">80</span> &amp;&amp; score &lt;= <span class="hljs-number">89</span>)&#123;<br>        System.out.println(<span class="hljs-string">&quot;变形金刚一个&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;胖揍一顿&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-comment">//无效的分数</span><br>    System.out.println(<span class="hljs-string">&quot;分数不合法&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107163621138.png" alt="image-20230107163621138"> </p><h3 id="2-switch语句结构"><a href="#2-switch语句结构" class="headerlink" title="2.switch语句结构"></a>2.switch语句结构</h3><h4 id="1-基本格式"><a href="#1-基本格式" class="headerlink" title="1.基本格式"></a>1.基本格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107164103988.png" alt="image-20230107164103988"></p><h4 id="2-表达式说明"><a href="#2-表达式说明" class="headerlink" title="2.表达式说明"></a>2.表达式说明</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107164241437.png" alt="image-20230107164241437"></p><blockquote><p>需求：键盘录入星期数，显示今天的减肥活动。</p><p>周一：跑步  </p><p>周二：游泳  </p><p>周三：慢走  </p><p>周四：动感单车</p><p>周五：拳击  </p><p>周六：爬山  </p><p>周日：好好吃一顿</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SwitchDemo2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//1.键盘录入一个整数表示星期</span><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        System.out.println(<span class="hljs-string">&quot;请输入一个整数表示星期&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">week</span> <span class="hljs-operator">=</span> sc.nextInt();<br>        <span class="hljs-comment">//2.书写一个switch语句去跟week进行匹配</span><br>        <span class="hljs-keyword">switch</span> (week)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                System.out.println(<span class="hljs-string">&quot;跑步&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                System.out.println(<span class="hljs-string">&quot;游泳&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                System.out.println(<span class="hljs-string">&quot;慢走&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>                System.out.println(<span class="hljs-string">&quot;动感单车&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>                System.out.println(<span class="hljs-string">&quot;拳击&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>                System.out.println(<span class="hljs-string">&quot;爬山&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>                System.out.println(<span class="hljs-string">&quot;好好吃一顿&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                System.out.println(<span class="hljs-string">&quot;输入错误，没有这个星期&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-switch的扩展知识"><a href="#3-switch的扩展知识" class="headerlink" title="3.switch的扩展知识"></a>3.switch的扩展知识</h4><h5 id="1-default的位置和省略"><a href="#1-default的位置和省略" class="headerlink" title="1.default的位置和省略"></a>1.default的位置和省略</h5><blockquote><p>1.位置: defaule不一定是写在最下面的，我们可以写在任意位置。只不过习惯会写在最下面2.省略: defaule可以省略，语法不会有问题,但是不建议省略。</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107185427444.png" alt="image-20230107185427444"></p><h5 id="2-case穿透"><a href="#2-case穿透" class="headerlink" title="2.case穿透"></a>2.case穿透</h5><blockquote><p>执行流程:<br>1.首先还是会拿着小括号中表达式的谊跟下面每一个case进行匹配。<br>2.如果匹配上了，就会执行对应的语句体，如果此时发现了brcak，那么结束整个switch语句。</p><p>3.如果没有发现break，那么程序会继续执行下一个case的语句体，一直遇到break或者右大括号为止。</p><p>4.如果多个case的语句体重复了，那么我们考虑利用case穿透去简化代码。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//分析：</span><br><span class="hljs-comment">//1.键盘录入星期数</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入星期&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">week</span> <span class="hljs-operator">=</span> sc.nextInt();<span class="hljs-comment">//3</span><br><span class="hljs-comment">//2.利用switch进行匹配</span><br>----------------------------------------------------<br>利用<span class="hljs-keyword">case</span>穿透简化代码<br><span class="hljs-keyword">switch</span> (week)&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>        System.out.println(<span class="hljs-string">&quot;工作日&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>        System.out.println(<span class="hljs-string">&quot;休息日&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        System.out.println(<span class="hljs-string">&quot;没有这个星期&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br>----------------------------------------------------<br>利用JDK12简化代码书写<br><span class="hljs-keyword">switch</span> (week) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> -&gt; System.out.println(<span class="hljs-string">&quot;工作日&quot;</span>);<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>, <span class="hljs-number">7</span> -&gt; System.out.println(<span class="hljs-string">&quot;休息日&quot;</span>);<br>    <span class="hljs-keyword">default</span> -&gt; System.out.println(<span class="hljs-string">&quot;没有这个星期&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-switch新特性-JDK以后"><a href="#3-switch新特性-JDK以后" class="headerlink" title="3.switch新特性(JDK以后)"></a>3.switch新特性(JDK以后)</h5><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107190733785.png" alt="image-20230107190733785"></p><blockquote><p>当大括号里面只有一句代码时,大括号可以省略</p></blockquote><h5 id="4-switch和if语句的使用场景"><a href="#4-switch和if语句的使用场景" class="headerlink" title="4.switch和if语句的使用场景"></a>4.switch和if语句的使用场景</h5><blockquote><p>switch和if第三种格式各自的使用场景if的第三种格式:一般用于对范围的判断<br>switch:把有限个数据一一列举出来,让我们任选其</p></blockquote><h2 id="3-循环结构"><a href="#3-循环结构" class="headerlink" title="3.循环结构"></a>3.循环结构</h2><h3 id="1-for循环"><a href="#1-for循环" class="headerlink" title="1.for循环"></a>1.for循环</h3><h4 id="1-基本格式-1"><a href="#1-基本格式-1" class="headerlink" title="1.基本格式"></a>1.基本格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107194308205.png" alt="image-20230107194308205"></p><h4 id="2-执行流程"><a href="#2-执行流程" class="headerlink" title="2.执行流程"></a>2.执行流程</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107194452587.png" alt="image-20230107194452587"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107194636297.png" alt="image-20230107194636297"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*需求：打印5次HelloWorld</span><br><span class="hljs-comment">开始条件：1</span><br><span class="hljs-comment">结束条件：5</span><br><span class="hljs-comment">重复代码：打印语句</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i++) &#123;<br>    System.out.println(<span class="hljs-string">&quot;HelloWorld&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-实践案例"><a href="#3-实践案例" class="headerlink" title="3.实践案例"></a>3.实践案例</h4><h5 id="1-输出数据"><a href="#1-输出数据" class="headerlink" title="1.输出数据"></a>1.输出数据</h5><blockquote><p>需求：在控制台输出1-5和5-1的数据 </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ForTest01</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//需求：输出数据1-5</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>; i&lt;=<span class="hljs-number">5</span>; i++) &#123;<br>System.out.println(i);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><span class="hljs-comment">//需求：输出数据5-1</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">5</span>; i&gt;=<span class="hljs-number">1</span>; i--) &#123;<br>System.out.println(i);<br>&#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2-求和"><a href="#2-求和" class="headerlink" title="2.求和"></a>2.求和</h5><blockquote><p>需求：求1-5之间的数据和，并把求和结果在控制台输出</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ForTest02</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-comment">//从1开始到5结束的数据，使用循环结构完成</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>; i&lt;=<span class="hljs-number">5</span>; i++) &#123;<br><span class="hljs-comment">//将反复进行的事情写入循环结构内部</span><br>             <span class="hljs-comment">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span><br>sum = sum + i;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">sum += i;sum = sum + i;</span><br><span class="hljs-comment">第一次：sum = sum + i = 0 + 1 = 1;</span><br><span class="hljs-comment">第二次：sum = sum + i = 1 + 2 = 3;</span><br><span class="hljs-comment">第三次：sum = sum + i = 3 + 3 = 6;</span><br><span class="hljs-comment">第四次：sum = sum + i = 6 + 4 = 10;</span><br><span class="hljs-comment">第五次：sum = sum + i = 10 + 5 = 15;</span><br><span class="hljs-comment">*/</span><br>&#125;<br><span class="hljs-comment">//当循环执行完毕时，将最终数据打印出来</span><br>System.out.println(<span class="hljs-string">&quot;1-5之间的数据和是：&quot;</span> + sum);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-求偶数和"><a href="#3-求偶数和" class="headerlink" title="3.求偶数和"></a>3.求偶数和</h5><blockquote><p>需求：求1-100之间的偶数和，并把求和结果在控制台输出</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ForTest03</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-comment">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>; i&lt;=<span class="hljs-number">100</span>; i++) &#123;<br><span class="hljs-comment">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span><br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-comment">//sum += i；</span><br>sum = sum + i;<br>&#125;<br>&#125;<br><span class="hljs-comment">//当循环执行完毕时，将最终数据打印出来</span><br>System.out.println(<span class="hljs-string">&quot;1-100之间的偶数和是：&quot;</span> + sum);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-次数统计"><a href="#4-次数统计" class="headerlink" title="4.次数统计"></a>4.次数统计</h5><blockquote><p>需求：键盘录入两个数字，表示一个范围。 统计这个范围中。</p><p>既能被3整除，又能被5整除数字有多少个？</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test16</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>       <span class="hljs-comment">/* 需求：键盘录入两个数字，表示一个范围。</span><br><span class="hljs-comment">        统计这个范围中。</span><br><span class="hljs-comment">        既能被3整除，又能被5整除数字有多少个？*/</span><br><br>        <span class="hljs-comment">//分析：</span><br>        <span class="hljs-comment">//1.键盘录入两个数字</span><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        System.out.println(<span class="hljs-string">&quot;请录入一个数字表示范围的开始&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">start</span> <span class="hljs-operator">=</span> sc.nextInt();<br>        System.out.println(<span class="hljs-string">&quot;请录入一个数字表示范围的结束&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">end</span> <span class="hljs-operator">=</span> sc.nextInt();<br><br>        <span class="hljs-comment">//统计变量</span><br>        <span class="hljs-comment">//简单理解：统计符合要求的数字的个数</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-comment">//2.利用循环获取这个范围中的每一个数字</span><br>        <span class="hljs-comment">//开始条件：start</span><br>        <span class="hljs-comment">//结束条件：end</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> start; i &lt;= end; i++) &#123;<br>            <span class="hljs-comment">//3.对每一个数字进行判断，统计有多少个满足要求的数字</span><br>            <span class="hljs-keyword">if</span> (i % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> &amp;&amp; i % <span class="hljs-number">5</span> == <span class="hljs-number">0</span>) &#123;<br>               <span class="hljs-comment">// System.out.println(i);</span><br>                count++;<br>            &#125;<br>        &#125;<br><br>        System.out.println(count);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="2-while循环"><a href="#2-while循环" class="headerlink" title="2.while循环"></a>2.while循环</h3><h4 id="1-基本格式-2"><a href="#1-基本格式-2" class="headerlink" title="1.基本格式"></a>1.基本格式</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107204558791.png" alt="image-20230107204558791"></p><h4 id="2-执行流程-1"><a href="#2-执行流程-1" class="headerlink" title="2.执行流程"></a>2.执行流程</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107204744937.png" alt="image-20230107204744937"></p><blockquote><p>初始化语句;<br>do{<br>   循环体;<br>   条件控制语句;<br>}while(条件判断语句);</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WhileDemo1</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//需求：利用while循环打印1~100</span><br>        <span class="hljs-comment">//分析：</span><br>        <span class="hljs-comment">//开始条件：1</span><br>        <span class="hljs-comment">//结束条件：100</span><br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(i &lt;= <span class="hljs-number">100</span>)&#123;<br>            System.out.println(i);<br>            i++;<br>        &#125;<br><br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-while循环和for循环的区别"><a href="#3-while循环和for循环的区别" class="headerlink" title="3.while循环和for循环的区别"></a>3.while循环和for循环的区别</h4><blockquote><p>for和while循环，是先判断，再执行。</p><p>​do…while是先执行，再判断。</p><p>​当知道循环次数或者循环范围的时候，用for循环。</p><p>​当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107205054003.png" alt="image-20230107205054003"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107205141626.png" alt="image-20230107205141626"></p><blockquote><p>需求：世界最高山峰是珠穆朗玛峰(8844.43米&#x3D;8844430毫米)，假如我有一张足够大的纸，它的厚度是0.1毫米。<br>请问，我折叠多少次，可以折成珠穆朗玛峰的高度</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test17</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">/*需求：世界最高山峰是珠穆朗玛峰(8844.43米=8844430毫米)，假如我有一张足够大的纸，它的厚度是0.1毫米。</span><br><span class="hljs-comment">        请问，我折叠多少次，可以折成珠穆朗玛峰的高度?*/</span><br>        <span class="hljs-comment">//分析：折叠纸张：每一次折叠纸张的厚度都是原先的两倍</span><br>        <span class="hljs-comment">// double a = 0.1;</span><br>        <span class="hljs-comment">// a = a * 2;</span><br>        <span class="hljs-comment">// a *= 2</span><br>        <span class="hljs-comment">//1.定义一个变量用来记录山峰的高度</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">height</span> <span class="hljs-operator">=</span> <span class="hljs-number">8844430</span>;<br>        <span class="hljs-comment">//2.定义一个变量用来记录纸张的初始厚度</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">paper</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span>;<br>        <span class="hljs-comment">//3.定义一个变量用来统计次数</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//4.循环折叠纸张，只要纸张的厚度小于山峰的高度，那么循环就继续</span><br>        <span class="hljs-comment">//每折叠一次，统计次数就要++</span><br> <span class="hljs-comment">//选择while理由：此时我们不知道循环的次数也不知道循环的范围，只知道循环的结束条件，所以用while</span><br>        <span class="hljs-keyword">while</span>(paper &lt; height)&#123;<br>            <span class="hljs-comment">//折叠纸张</span><br>            paper = paper * <span class="hljs-number">2</span>;<br>            <span class="hljs-comment">//折叠一次，++一次</span><br>            count++;<br>        &#125;<br>        <span class="hljs-comment">//当循环结束之后，count记录的值就是折叠的次数</span><br>        System.out.println(count);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-实践案例-1"><a href="#3-实践案例-1" class="headerlink" title="3.实践案例"></a>3.实践案例</h4><h5 id="1-回文数"><a href="#1-回文数" class="headerlink" title="1.回文数"></a>1.回文数</h5><blockquote><p>需求：给你一个整数 x 。<br>如果 x 是一个回文整数，打印 true ，否则，返回 false 。<br>解释：回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。<br>例如，121 是回文，而 123 不是。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test18</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">/*需求：给你一个整数 x 。</span><br><span class="hljs-comment">        如果 x 是一个回文整数，打印 true ，否则，返回 false 。</span><br><span class="hljs-comment">        解释：回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</span><br><span class="hljs-comment">        例如，121 是回文，而 123 不是。*/</span><br><br>        <span class="hljs-comment">//分析：</span><br>        <span class="hljs-comment">//1.定义变量记录整数</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">12345</span>;<br>        <span class="hljs-comment">//把x做一个临时存储，用来最后进行判断</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> x;<br>        <span class="hljs-comment">//2.定义变量记录最终的结果（反过来的数字）</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//3.利用循环从右往左获取x中的数字并拼接到result当中</span><br>        <span class="hljs-comment">//while</span><br>        <span class="hljs-keyword">while</span>(x != <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-comment">//获取到x最右边的数字</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">ge</span> <span class="hljs-operator">=</span> x % <span class="hljs-number">10</span>;<br>            <span class="hljs-comment">//获取一次数字之后，那么就要把当前最右边的数字给去掉</span><br>            x = x / <span class="hljs-number">10</span>;<br>            <span class="hljs-comment">//拼接到result当中</span><br>            result = result * <span class="hljs-number">10</span> + ge;<br>        &#125;<br>        System.out.println(result == temp);<br><br>      <span class="hljs-comment">/*  //1.如何获取到3</span><br><span class="hljs-comment">        int ge = x % 10;</span><br><span class="hljs-comment">        result = result + ge;</span><br><span class="hljs-comment">        System.out.println(result);</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        //2.把十位2拼接到result里面</span><br><span class="hljs-comment">        int shi = x / 10 % 10;</span><br><span class="hljs-comment">        result = result * 10 + shi;</span><br><span class="hljs-comment">        System.out.println(result);//32</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        //3.把百位拼接到result里面</span><br><span class="hljs-comment">        int bai = x / 100 % 10;</span><br><span class="hljs-comment">        result = result * 10 + bai;</span><br><span class="hljs-comment">        System.out.println(result);//321*/</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2-商余数"><a href="#2-商余数" class="headerlink" title="2.商余数"></a>2.商余数</h5><blockquote><p>需求：给定两个整数，被除数和除数（都是正数，且不超过int的范围） 。</p><p>将两数相除，要求不使用乘法、除法和 % 运算符。<br>得到商和余数</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java">  <span class="hljs-comment">/*需求：给定两个整数，被除数和除数（都是正数，且不超过int的范围） 。</span><br><span class="hljs-comment">        将两数相除，要求不使用乘法、除法和 % 运算符。</span><br><span class="hljs-comment">        得到商和余数。</span><br><span class="hljs-comment">        分析：</span><br><span class="hljs-comment">            被除数 / 除数 = 商 ... 余数</span><br><span class="hljs-comment">        int a = 100;</span><br><span class="hljs-comment">        int b = 10;</span><br><span class="hljs-comment">        100 - 10 = 90</span><br><span class="hljs-comment">        90 - 10 = 80</span><br><span class="hljs-comment">        80 - 10 = 70</span><br><span class="hljs-comment">        70 - 10 = 60</span><br><span class="hljs-comment">        ...</span><br><span class="hljs-comment">        10 - 10 = 0 (余数)</span><br><span class="hljs-comment">  */</span><br>        <span class="hljs-comment">//1.定义变量记录被除数</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">dividend</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span>;<br>        <span class="hljs-comment">//2.定义变量记录除数</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">divisor</span> <span class="hljs-operator">=</span> <span class="hljs-number">37</span>;<br>        <span class="hljs-comment">//3.定义一个变量用来统计相减了多少次</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//3.循环 while</span><br>        <span class="hljs-comment">//在循环中，不断的用被除数 - 除数</span><br>        <span class="hljs-comment">//只要被除数 是大于等于除数的，那么就一直循环</span><br>        <span class="hljs-keyword">while</span>(dividend &gt;= divisor)&#123;<br>            dividend = dividend - divisor;<br>            <span class="hljs-comment">//只要减一次，那么统计变量就自增一次</span><br>            count++;<br>        &#125;<br>       <span class="hljs-comment">//当循环结束之后dividend变量记录的就是余数</span><br>        System.out.println(<span class="hljs-string">&quot;余数为：&quot;</span> + dividend);<br>        <span class="hljs-comment">//当循环结束之后，count记录的值就是商</span><br>        System.out.println(<span class="hljs-string">&quot;商为：&quot;</span> + count);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-do-while循环"><a href="#3-do-while循环" class="headerlink" title="3.do-while循环"></a>3.do-while循环</h3><h4 id="1-格式及流程"><a href="#1-格式及流程" class="headerlink" title="1.格式及流程"></a>1.格式及流程</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107214039168.png" alt="image-20230107214039168"></p><h2 id="4-循环高级"><a href="#4-循环高级" class="headerlink" title="4.循环高级"></a>4.循环高级</h2><h3 id="1-无限循环"><a href="#1-无限循环" class="headerlink" title="1.无限循环"></a>1.无限循环</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107215313427.png" alt="image-20230107215313427"></p><blockquote><p>无限循环的下面不能再写具他代码了，因为循环永远停不下来，那么下面的代码就远执行不到</p></blockquote><h3 id="2-跳转控制语句"><a href="#2-跳转控制语句" class="headerlink" title="2.跳转控制语句"></a>2.跳转控制语句</h3><blockquote><p>在循环的过程中，跳到其他语句上执行。</p></blockquote><blockquote><h6 id="continue"><a href="#continue" class="headerlink" title="continue:"></a>continue:</h6><p>​不能单独存在的。只能存在于循环当中。</p><p>​表示：跳过本次循环，继续执行下次循环。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1.吃1~5号包子</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i++) &#123;<br>    <span class="hljs-comment">//2.第3个包子有虫子就跳过，继续吃下面的包子</span><br>    <span class="hljs-keyword">if</span>(i == <span class="hljs-number">3</span>)&#123;<br>        <span class="hljs-comment">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span><br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    System.out.println(<span class="hljs-string">&quot;在吃第&quot;</span> + i + <span class="hljs-string">&quot;个包子&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><h6 id="break"><a href="#break" class="headerlink" title="break:"></a>break:</h6><p>​不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</p><p>代码示例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1.吃1~5号包子</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i++) &#123;<br>    System.out.println(<span class="hljs-string">&quot;在吃第&quot;</span> + i + <span class="hljs-string">&quot;个包子&quot;</span>);<br>    <span class="hljs-comment">//2.吃完第三个的时候就不吃了</span><br>    <span class="hljs-keyword">if</span>(i == <span class="hljs-number">3</span>)&#123;<br>        <span class="hljs-keyword">break</span>;<span class="hljs-comment">//结束整个循环。</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230107220328748.png" alt="image-20230107220328748"></p><h2 id="5-循环练习"><a href="#5-循环练习" class="headerlink" title="5.循环练习"></a>5.循环练习</h2><h3 id="1-逢七过"><a href="#1-逢七过" class="headerlink" title="1.逢七过"></a>1.逢七过</h3><blockquote><p>需求：</p><p>朋友聚会的时候可能会玩一个游戏：逢7过 </p><p>游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</p><p>使用程序在控制台打印出1-100之间的满足逢七必过规则的数据 </p><p>举例：</p><p>​1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 …</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*朋友聚会的时候可能会玩一个游戏：逢7过</span><br><span class="hljs-comment">        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</span><br><span class="hljs-comment">        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/</span><br><span class="hljs-comment">//分析：</span><br><span class="hljs-comment">//个位7  十位7   7倍数</span><br><span class="hljs-comment">//1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 19 20 过....</span><br><span class="hljs-comment">//69 过 过 过 过 过 过... 80</span><br><span class="hljs-comment">//1.得到1~100之间的每一个数字</span><br><span class="hljs-comment">//开始：1</span><br><span class="hljs-comment">//结束：100</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">100</span>; i++) &#123;<br>    <span class="hljs-comment">//2.判断每一个数字，如果符合规则，就打印过，如果不符合规则就打印真实的数字</span><br>    <span class="hljs-keyword">if</span>(i % <span class="hljs-number">10</span> == <span class="hljs-number">7</span> || i / <span class="hljs-number">10</span> % <span class="hljs-number">10</span> == <span class="hljs-number">7</span>  ||  i % <span class="hljs-number">7</span> == <span class="hljs-number">0</span>)&#123;<br>        System.out.println(<span class="hljs-string">&quot;过&quot;</span>);<br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-平方根"><a href="#2-平方根" class="headerlink" title="2.平方根"></a>2.平方根</h3><blockquote><p>需求：</p><p>​键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。结果只保留整数部分 ，小数部分将被舍去</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*需求：键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。</span><br><span class="hljs-comment">        结果只保留整数部分 ，小数部分将被舍去 。</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//分析：</span><br><span class="hljs-comment">//平方根   16的平方根4</span><br><span class="hljs-comment">//         4的平方根2</span><br><span class="hljs-comment">// 10</span><br><span class="hljs-comment">// 1 * 1 = 1 &lt; 10</span><br><span class="hljs-comment">// 2 * 2 = 4 &lt; 10</span><br><span class="hljs-comment">// 3 * 3 = 9 &lt; 10</span><br><span class="hljs-comment">// 4 * 4 = 16 &gt; 10</span><br><span class="hljs-comment">//推断：10的平方根是在3~4之间。</span><br><span class="hljs-comment">// 20</span><br><span class="hljs-comment">// 1 * 1 = 1 &lt; 20</span><br><span class="hljs-comment">// 2 * 2 = 4 &lt; 20</span><br><span class="hljs-comment">// 3 * 3 = 9 &lt; 20</span><br><span class="hljs-comment">// 4 * 4 = 16 &lt; 20</span><br><span class="hljs-comment">// 5 * 5 = 25 &gt; 20</span><br><span class="hljs-comment">//推断：20的平方根是在4~5之间。</span><br><span class="hljs-comment">//在代码当中</span><br><span class="hljs-comment">//从1开始循环，拿着数字的平方跟原来的数字进行比较</span><br><span class="hljs-comment">//如果小于的，那么继续往后判断</span><br><span class="hljs-comment">//如果相等，那么当前数字就是平方根</span><br><span class="hljs-comment">//如果大于的，那么前一个数字就是平方跟的整数部分</span><br><span class="hljs-comment">//1.键盘录入一个整数</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入一个整数&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> sc.nextInt();<br><span class="hljs-comment">//2.从1开始循环判断</span><br><span class="hljs-comment">//开始：1 结束: number</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= number; i++) &#123;<br>    <span class="hljs-comment">//用i * i 再跟number进行比较</span><br>    <span class="hljs-keyword">if</span>(i * i == number)&#123;<br>        System.out.println(i + <span class="hljs-string">&quot;就是&quot;</span> + number + <span class="hljs-string">&quot;的平方根&quot;</span>);<br>        <span class="hljs-comment">//一旦找到了，循环就可以停止了，后面的数字就不需要再找了，提高代码的运行效率。</span><br>        <span class="hljs-keyword">break</span>;<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i * i &gt; number)&#123;<br>        System.out.println((i - <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;就是&quot;</span> + number + <span class="hljs-string">&quot;平方根的整数部分&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-求质数"><a href="#3-求质数" class="headerlink" title="3.求质数"></a>3.求质数</h3><blockquote><p>键盘输入一个数 判断这个数是不是一个质数</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。</span><br><br><span class="hljs-comment">//质数：</span><br><span class="hljs-comment">//如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数</span><br><span class="hljs-comment">//7 = 1 * 7 质数</span><br><span class="hljs-comment">//8 = 1 * 8  2 * 4 合数</span><br><br><br><span class="hljs-comment">//分析：</span><br><span class="hljs-comment">//1.键盘录入一个正整数</span><br><span class="hljs-comment">//number</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入一个正整数&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> sc.nextInt();<span class="hljs-comment">//9</span><br><br><span class="hljs-comment">//定义一个变量，表示标记</span><br><span class="hljs-comment">//标记着number是否为一个质数</span><br><span class="hljs-comment">//true： 是一个质数</span><br><span class="hljs-comment">//false : 不是一个质数</span><br><br><span class="hljs-comment">//表示最初就认为number是一个质数</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-comment">//2.判断</span><br><span class="hljs-comment">//写一个循环，从2开始判断，一直判断到number-1为止</span><br><span class="hljs-comment">//看这个范围之内，有没有数字可以被number整除</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; i &lt; number; i++) &#123;<br>    <span class="hljs-comment">//i 依次表示这个范围之内的每一个数字</span><br>    <span class="hljs-comment">//看number是否能被i整除就可以了</span><br>    <span class="hljs-keyword">if</span>(number % i == <span class="hljs-number">0</span>)&#123;<span class="hljs-comment">// 9 % 2 = 1</span><br>        flag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-comment">//System.out.println(number + &quot;不是一个质数&quot;);</span><br>        <span class="hljs-keyword">break</span>;<br>    &#125;<span class="hljs-comment">/*else&#123;</span><br><span class="hljs-comment">                System.out.println(number + &quot;是一个质数&quot;);</span><br><span class="hljs-comment">            &#125;*/</span><br>&#125;<br><span class="hljs-comment">//只有当这个循环结束了，表示这个范围之内所有的数字都判断完毕了</span><br><span class="hljs-comment">//此时才能断定number是一个质数</span><br><span class="hljs-keyword">if</span>(flag)&#123;<br>    System.out.println(number + <span class="hljs-string">&quot;是一个质数&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    System.out.println(number + <span class="hljs-string">&quot;不是一个质数&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-猜数字"><a href="#4-猜数字" class="headerlink" title="4.猜数字"></a>4.猜数字</h3><blockquote><p>需求：</p><p>​程序自动生成一个1-100之间的随机数，在代码中使用键盘录入去猜出这个数字是多少？</p><p>要求：</p><p>​使用循环猜，一直猜中为止</p></blockquote><blockquote><ol><li>生成一个1-100之间的随机数</li><li>使用键盘录入去猜出这个数字是多少</li><li>把反复猜的代码写在循环中</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1.生成一个1-100之间的随机数</span><br><span class="hljs-type">Random</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> r.nextInt(<span class="hljs-number">100</span>) + <span class="hljs-number">1</span>;<span class="hljs-comment">// 0 ~ 99 + 1 --- 1 ~ 100</span><br>System.out.println(number);<br><br><span class="hljs-comment">//2.使用键盘录入去猜出这个数字是多少？</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br>    System.out.println(<span class="hljs-string">&quot;请输入一个整数&quot;</span>);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">guessNumber</span> <span class="hljs-operator">=</span> sc.nextInt();<br>    <span class="hljs-comment">//3.比较</span><br>    <span class="hljs-keyword">if</span>(guessNumber &gt; number)&#123;<br>        System.out.println(<span class="hljs-string">&quot;您猜的数字大了&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(guessNumber &lt; number)&#123;<br>        System.out.println(<span class="hljs-string">&quot;您猜的数字小了&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;恭喜你，猜中了&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>随机范围的数字生成秘诀7-15</p><p>1.让这个范围头尾都减去一个值，让这个范围从0开始 -7 0-8</p><p>2.尾巴+1 8+1&#x3D;9</p><p>3-最终的结果，再加上第一步减去的值</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Java基础</tag>
      
      <tag>流程控制语句</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day02-1-4-Java-基础学习-运算符</title>
    <link href="/2023/01/03/Day02-1-4-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2023/01/03/Day02-1-4-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="Day02-1-4-Java-基础学习-运算符"><a href="#Day02-1-4-Java-基础学习-运算符" class="headerlink" title="Day02-1-4-Java-基础学习-运算符"></a>Day02-1-4-Java-基础学习-运算符</h1><h2 id="1-运算符和表达式"><a href="#1-运算符和表达式" class="headerlink" title="1.运算符和表达式"></a>1.运算符和表达式</h2><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><blockquote><p>运算符：对字面量或者变量进行操作的符号。</p><p>表达式：用运算符把字面量或者变量连接起来，符合java语法的式子就可以称为表达式。</p><p>​       不同运算符连接的表达式体现的是不同类型的表达式。</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104131927449.png" alt="image-20230104131927449"></p><h2 id="2-算术运算符"><a href="#2-算术运算符" class="headerlink" title="2.算术运算符"></a>2.算术运算符</h2><h3 id="1-基本概念-1"><a href="#1-基本概念-1" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104132743859.png" alt="image-20230104132743859"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">+ - * :跟小学数学中一模一样没有任何区别<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">/：除法<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1.整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class="hljs-comment">2.小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class="hljs-comment">*/</span>   <br>案例：<br>System.out.println( <span class="hljs-number">10</span> / <span class="hljs-number">3</span>);<span class="hljs-comment">//3</span><br>System.out.println(<span class="hljs-number">10.0</span> / <span class="hljs-number">3</span>);<span class="hljs-comment">//3.3333333333333335</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">%：取模、取余。<br>   他做的也是除法运算，只不过获取的是余数而已。<br>案例：<br>System.out.println(<span class="hljs-number">10</span> % <span class="hljs-number">2</span>);<span class="hljs-comment">//0</span><br>System.out.println(<span class="hljs-number">10</span> % <span class="hljs-number">3</span>);<span class="hljs-comment">//1</span><br>应用场景：<br><span class="hljs-comment">//可以利用取模来判断一个数是奇数还是偶数</span><br>System.out.println(<span class="hljs-number">15</span> % <span class="hljs-number">2</span>);<span class="hljs-comment">//1  奇数</span><br></code></pre></td></tr></table></figure><h3 id="2-运算符案例"><a href="#2-运算符案例" class="headerlink" title="2.运算符案例"></a>2.运算符案例</h3><blockquote><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1.键盘录入一个三位数</span><br><span class="hljs-comment">//导包 --- 创建对象 --- 接收数据</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>System.out.println(<span class="hljs-string">&quot;请输入一个三位数&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> sc.nextInt();<span class="hljs-comment">//123</span><br><span class="hljs-comment">//2.获取这个三位数的个位、十位、百位并打印出来</span><br><span class="hljs-comment">//公式：</span><br><span class="hljs-comment">//针对于任意的一个数而言</span><br><span class="hljs-comment">//个位： 数字 % 10</span><br><span class="hljs-type">int</span> <span class="hljs-variable">ones</span> <span class="hljs-operator">=</span> number % <span class="hljs-number">10</span>;<br><span class="hljs-comment">//十位： 数字 / 10 % 10</span><br><span class="hljs-type">int</span> <span class="hljs-variable">tens</span> <span class="hljs-operator">=</span> number / <span class="hljs-number">10</span> % <span class="hljs-number">10</span>;<br><span class="hljs-comment">//百位： 数字 / 100 % 10</span><br><span class="hljs-type">int</span> <span class="hljs-variable">hundreds</span> <span class="hljs-operator">=</span> number / <span class="hljs-number">100</span>  % <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><h3 id="3-数据类型转换"><a href="#3-数据类型转换" class="headerlink" title="3.数据类型转换"></a>3.数据类型转换</h3><h4 id="1-自动类型转换"><a href="#1-自动类型转换" class="headerlink" title="1.自动类型转换"></a>1.自动类型转换</h4><blockquote><p>也叫自动类型提升。</p><p>就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的.</p><p>就是小的给大的，可以直接给</p><p> 提升规则：</p><ul><li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li><li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算</li><li>byte short int long float double（取值范围从大到小）</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>System.out.println(d);<span class="hljs-comment">//10.0</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">10是整数，整数默认是int类型的。</span><br><span class="hljs-comment">而在取值范围的顺序中：byte short int long float double</span><br><span class="hljs-comment">在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104142055164.png" alt="image-20230104142055164"></p><h4 id="2-强制转换"><a href="#2-强制转换" class="headerlink" title="2.强制转换"></a>2.强制转换</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104144103293.png" alt="image-20230104144103293"></p><blockquote><p>如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。如果一定要这么干，就需要加入强制转换</p><p>​目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p><p>简单理解：</p><p>​要转成什么类型的，那么就在小括号中写什么类型就可以了。</p><p>注意点：</p><p>​强制转换有可能会导致数据发生错误。（数据的精度丢失）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperatorDemo2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">12.3</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) a;<br>        System.out.println(b);<span class="hljs-comment">//12</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-字符串拼接-相加"><a href="#4-字符串拼接-相加" class="headerlink" title="4.字符串拼接(相加)"></a>4.字符串拼接(相加)</h3><blockquote><ul><li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li><li>当连续进行+操作时，从左到右逐个执行的。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-number">1</span> + <span class="hljs-string">&quot;abc&quot;</span> + <span class="hljs-number">1</span><br> <span class="hljs-comment">//结果 &quot;1abc1&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-number">1</span> + <span class="hljs-number">2</span> + <span class="hljs-string">&quot;abc&quot;</span> + <span class="hljs-number">2</span> + <span class="hljs-number">1</span><br>    <span class="hljs-comment">//“3abc21”</span><br>第一步：<span class="hljs-number">1</span> + <span class="hljs-number">2</span> 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为<span class="hljs-number">3</span>。<br>第二步：<span class="hljs-number">3</span> + <span class="hljs-string">&quot;abc&quot;</span>。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串<span class="hljs-string">&quot;3abc&quot;</span>。<br>第三步：<span class="hljs-string">&quot;3abc&quot;</span> + <span class="hljs-number">2</span>。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串<span class="hljs-string">&quot;3abc2&quot;</span>。<br>第四步：<span class="hljs-string">&quot;3abc2&quot;</span> + <span class="hljs-number">1</span>。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”<br></code></pre></td></tr></table></figure><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104145257803.png" alt="image-20230104145257803"></p><h3 id="5-字符相加"><a href="#5-字符相加" class="headerlink" title="5.字符相加"></a>5.字符相加</h3><blockquote><p>当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104150003428.png" alt="image-20230104150003428"></p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104145911170.png" alt="image-20230104145911170"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104150118269.png" alt="image-20230104150118269"></p><h3 id="6-算术运算符小结"><a href="#6-算术运算符小结" class="headerlink" title="6.算术运算符小结"></a>6.算术运算符小结</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104150315458.png" alt="image-20230104150315458"></p><h2 id="3-自增自减运算符"><a href="#3-自增自减运算符" class="headerlink" title="3.自增自减运算符"></a>3.自增自减运算符</h2><h3 id="1-单独使用"><a href="#1-单独使用" class="headerlink" title="1.单独使用"></a>1.单独使用</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104150555468.png" alt="image-20230104150555468"></p><blockquote><ul><li>放在变量的前面，我们叫做先++。 比如：++a</li><li>放在变量的后面，我们叫做后++。 比如：a++</li><li>不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//++</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>a++;<span class="hljs-comment">//就是让变量a里面的值 + 1</span><br>System.out.println(a);<span class="hljs-comment">//11</span><br>++a;<span class="hljs-comment">//就是让变量a里面的值 + 1</span><br>System.out.println(a);<span class="hljs-comment">//12</span><br></code></pre></td></tr></table></figure><h3 id="2-参与计算"><a href="#2-参与计算" class="headerlink" title="2.参与计算"></a>2.参与计算</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104161519933.png" alt="image-20230104161519933"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104161419004.png" alt="image-20230104161419004"></p><h2 id="4-赋值运算符"><a href="#4-赋值运算符" class="headerlink" title="4.赋值运算符"></a>4.赋值运算符</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104162530481.png" alt="image-20230104162530481"></p><blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104162553311.png" alt="image-20230104162553311"></p></blockquote><blockquote><p>扩展的赋值运算符中隐层还包含了一个强制转换。</p><p>以+&#x3D;为例。</p><p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p></blockquote><h2 id="5-关系-比较-运算符"><a href="#5-关系-比较-运算符" class="headerlink" title="5.关系(比较)运算符"></a>5.关系(比较)运算符</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104163019350.png" alt="image-20230104163019350"></p><h2 id="6-逻辑运算符"><a href="#6-逻辑运算符" class="headerlink" title="6.逻辑运算符"></a>6.逻辑运算符</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104163715755.png" alt="image-20230104163715755"></p><blockquote><p>&amp;：逻辑与（而且）</p><p>​两边都为真，结果才是真，只要有一个为假，那么结果就是假。</p><p>|：逻辑或（或者）</p><p>​两边都为假，结果才是假，只要有一个为真，那么结果就是真</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// &amp;  //两边都是真，结果才是真。</span><br>System.out.println(<span class="hljs-literal">true</span> &amp; <span class="hljs-literal">true</span>);<span class="hljs-comment">//true</span><br>System.out.println(<span class="hljs-literal">false</span> &amp; <span class="hljs-literal">false</span>);<span class="hljs-comment">//false</span><br>System.out.println(<span class="hljs-literal">true</span> &amp; <span class="hljs-literal">false</span>);<span class="hljs-comment">//false</span><br>System.out.println(<span class="hljs-literal">false</span> &amp; <span class="hljs-literal">true</span>);<span class="hljs-comment">//false</span><br><br>System.out.println(<span class="hljs-string">&quot;===================================&quot;</span>);<br><br><span class="hljs-comment">// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。</span><br>System.out.println(<span class="hljs-literal">true</span> | <span class="hljs-literal">true</span>);<span class="hljs-comment">//true</span><br>System.out.println(<span class="hljs-literal">false</span> | <span class="hljs-literal">false</span>);<span class="hljs-comment">//false</span><br>System.out.println(<span class="hljs-literal">true</span> | <span class="hljs-literal">false</span>);<span class="hljs-comment">//true</span><br>System.out.println(<span class="hljs-literal">false</span> | <span class="hljs-literal">true</span>);<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><blockquote><h6 id="（异或）的使用："><a href="#（异或）的使用：" class="headerlink" title="^（异或）的使用："></a>^（异或）的使用：</h6><p>​在以后用的不多，了解一下即可。</p><p>计算规则：如果两边相同，结果为false，如果两边不同，结果为true</p><h6 id="（取反）的使用："><a href="#（取反）的使用：" class="headerlink" title="!（取反）的使用："></a>!（取反）的使用：</h6><p>是取反，也叫做非。</p><p>计算规则：false取反就是true，true取反就是false</p><p>温馨提示：取反最多只用一个</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//^   //左右不相同，结果才是true，左右相同结果就是false</span><br>System.out.println(<span class="hljs-literal">true</span> ^ <span class="hljs-literal">true</span>);<span class="hljs-comment">//false</span><br>System.out.println(<span class="hljs-literal">false</span> ^ <span class="hljs-literal">false</span>);<span class="hljs-comment">//false</span><br>System.out.println(<span class="hljs-literal">true</span> ^ <span class="hljs-literal">false</span>);<span class="hljs-comment">//true</span><br>System.out.println(<span class="hljs-literal">false</span> ^ <span class="hljs-literal">true</span>);<span class="hljs-comment">//true</span><br><span class="hljs-comment">// !（取反）的使用：计算规则：false取反就是true，true取反就是false</span><br>System.out.println(!<span class="hljs-literal">false</span>);<span class="hljs-comment">//true</span><br>System.out.println(!<span class="hljs-literal">true</span>);<span class="hljs-comment">//false</span><br>System.out.println(!!<span class="hljs-literal">false</span>);<span class="hljs-comment">//注意点：取反最多只用一个。</span><br></code></pre></td></tr></table></figure><h2 id="7-短路逻辑运算符"><a href="#7-短路逻辑运算符" class="headerlink" title="7.短路逻辑运算符"></a>7.短路逻辑运算符</h2><blockquote><h6 id="amp-amp-："><a href="#amp-amp-：" class="headerlink" title="&amp;&amp;："></a>&amp;&amp;：</h6><p>​运算结果跟&amp;是一模一样的，只不过具有短路效果。</p><h6 id="："><a href="#：" class="headerlink" title="||："></a>||：</h6><p>​运算结果跟|是一模一样的。只不过具有短路效果。</p><p>​    当左边不能确定整个表达式的结果，右边才会执行。</p><p>​当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104172725069.png" alt="image-20230104172725069"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//3.短路逻辑运算符具有短路效果</span><br>      <span class="hljs-comment">//简单理解：当左边的表达式能确定最终的结果，那么右边就不会参与运行了</span><br>      <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>      <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>      <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> ++a &lt; <span class="hljs-number">5</span> &amp; ++b &lt; <span class="hljs-number">5</span>;<br>      System.out.println(result);<span class="hljs-comment">//false</span><br>      System.out.println(a);<span class="hljs-comment">//11</span><br>      System.out.println(b);<span class="hljs-comment">//10</span><br></code></pre></td></tr></table></figure><h2 id="8-三元运算符"><a href="#8-三元运算符" class="headerlink" title="8.三元运算符"></a>8.三元运算符</h2><blockquote><p>又叫做：三元表达式或者问号冒号表达式</p><p>关系表达式 ？ 表达式1 ：表达式2 ；</p><p>计算规则：</p><ul><li>计算关系表达式的值。</li><li>如果关系表达式的值为真，那么执行表达式1。</li><li>如果关系表达式的值为假，那么执行表达式2。</li><li>三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OperatorDemo12</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//需求：求两个数的较大值</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br>        <span class="hljs-comment">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span><br>        <span class="hljs-comment">//注意点：</span><br>        <span class="hljs-comment">//三元运算符的最终结果一定要被使用。</span><br>        <span class="hljs-comment">//要么赋值给一个变量，要么直接输出。</span><br>       <span class="hljs-type">int</span> <span class="hljs-variable">max</span> <span class="hljs-operator">=</span>  a &gt; b ? a : b ;<br>        System.out.println(max);<br>        System.out.println(a &gt; b ? a : b);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="10-运算符的优先级"><a href="#10-运算符的优先级" class="headerlink" title="10.运算符的优先级"></a>10.运算符的优先级</h2><blockquote><p>在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。</p><p>咱们只要知道其中一点：</p><p>​小括号优先于所有。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Java基础</tag>
      
      <tag>运算符</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day01-1-3-Java-基础学习-数据类型</title>
    <link href="/2023/01/02/Day01-1-3-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2023/01/02/Day01-1-3-Java-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Day01-1-3-Java-基础学习-数据类型"><a href="#Day01-1-3-Java-基础学习-数据类型" class="headerlink" title="Day01-1-3-Java-基础学习-数据类型"></a>Day01-1-3-Java-基础学习-数据类型</h1><h2 id="0-前置知识-计算机中的存储"><a href="#0-前置知识-计算机中的存储" class="headerlink" title="0.前置知识-计算机中的存储"></a>0.前置知识-计算机中的存储</h2><h3 id="1-存储规则"><a href="#1-存储规则" class="headerlink" title="1.存储规则"></a>1.存储规则</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103190534184.png" alt="image-20230103190534184"></p><h3 id="2-进制表现形式"><a href="#2-进制表现形式" class="headerlink" title="2.进制表现形式"></a>2.进制表现形式</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103191947049.png" alt="image-20230103191947049"></p><h3 id="3-进制间的转化"><a href="#3-进制间的转化" class="headerlink" title="3.进制间的转化"></a>3.进制间的转化</h3><h4 id="1-任意进制转十进制"><a href="#1-任意进制转十进制" class="headerlink" title="1.任意进制转十进制"></a>1.任意进制转十进制</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103192224568.png" alt="image-20230103192224568"></p><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103192554935.png" alt="image-20230103192554935"></p><h4 id="2-二进制转十进制"><a href="#2-二进制转十进制" class="headerlink" title="2.二进制转十进制"></a>2.二进制转十进制</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103192939465.png" alt="image-20230103192939465"></p><h4 id="3-十进制转其他进制"><a href="#3-十进制转其他进制" class="headerlink" title="3.十进制转其他进制"></a>3.十进制转其他进制</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103193216494.png" alt="image-20230103193216494"></p><h4 id="4-进制转化小结"><a href="#4-进制转化小结" class="headerlink" title="4.进制转化小结"></a>4.进制转化小结</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103193320871.png" alt="image-20230103193320871"></p><h3 id="4-计算机存储规则小结"><a href="#4-计算机存储规则小结" class="headerlink" title="4.计算机存储规则小结"></a>4.计算机存储规则小结</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103204230498.png" alt="image-20230103204230498"></p><h2 id="1-编译和解释型语言"><a href="#1-编译和解释型语言" class="headerlink" title="1.编译和解释型语言"></a>1.编译和解释型语言</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103160747336.png" alt="image-20230103160747336"></p><h2 id="2-跨平台原理"><a href="#2-跨平台原理" class="headerlink" title="2.跨平台原理"></a>2.跨平台原理</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103160903564.png" alt="image-20230103160903564"></p><h2 id="3-JDK和JRE"><a href="#3-JDK和JRE" class="headerlink" title="3.JDK和JRE"></a>3.JDK和JRE</h2><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103161359314.png" alt="image-20230103161359314"></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">JVM（Java </span>Virtual Machine），<span class="hljs-keyword">Java虚拟机</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword">JRE（Java </span>Runtime Environment），<span class="hljs-keyword">Java运行环境，包含了JVM和Java的核心类库（Java </span>API）,部分运行工具<br><br><span class="hljs-keyword">JDK（Java </span>Development Kit）称为<span class="hljs-keyword">Java开发工具，包含了JRE和开发工具</span><br></code></pre></td></tr></table></figure><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103161538594.png" alt="image-20230103161538594"></p><h2 id="4-Java中的注释"><a href="#4-Java中的注释" class="headerlink" title="4.Java中的注释"></a>4.Java中的注释</h2><h3 id="1-单行注释"><a href="#1-单行注释" class="headerlink" title="1.单行注释"></a>1.单行注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span>&#123;<br>        <span class="hljs-comment">//这是但是注释</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String [] args)</span>&#123;<br>        <span class="hljs-comment">//这是输出单行注释</span><br>        System.out.printf(<span class="hljs-string">&quot;Hello World&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-多行注释"><a href="#2-多行注释" class="headerlink" title="2.多行注释"></a>2.多行注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span>&#123;<br>       <span class="hljs-comment">/*</span><br><span class="hljs-comment">       这是多行注释</span><br><span class="hljs-comment">       */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String [] args)</span>&#123;<br>       <span class="hljs-comment">/*</span><br><span class="hljs-comment">       这是多行注释</span><br><span class="hljs-comment">       */</span><br>        System.out.printf(<span class="hljs-string">&quot;Hello World&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-文档注释"><a href="#3-文档注释" class="headerlink" title="3.文档注释"></a>3.文档注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/** </span><br><span class="hljs-comment">* Application entry point </span><br><span class="hljs-comment">* <span class="hljs-doctag">@param</span> args array of command-line arguments passed to this method </span><br><span class="hljs-comment">*这是文档注释</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>单行注释和多行注释不要嵌套</strong></p></blockquote><h2 id="5-关键字"><a href="#5-关键字" class="headerlink" title="5.关键字"></a>5.关键字</h2><h3 id="1-关键字基本概念"><a href="#1-关键字基本概念" class="headerlink" title="1.关键字基本概念"></a>1.关键字基本概念</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103163237544.png" alt="image-20230103163237544"></p><h3 id="2-Java中的关键字"><a href="#2-Java中的关键字" class="headerlink" title="2.Java中的关键字"></a>2.Java中的关键字</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103163340845.png" alt="image-20230103163340845"></p><p><strong>Java中包含50多个关键字</strong></p><h3 id="3-class关键字"><a href="#3-class关键字" class="headerlink" title="3.class关键字"></a>3.class关键字</h3><blockquote><p><strong>class:用于(创建&#x2F;定义)一个类 类是Java最基本的组成单元</strong></p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103163751643.png" alt="image-20230103163751643"></p><h2 id="6-字面量"><a href="#6-字面量" class="headerlink" title="6.字面量"></a>6.字面量</h2><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><blockquote><p>数据在程序中的书写格式</p></blockquote><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2.分类"></a>2.分类</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103171526026.png" alt="image-20230103171526026"></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ValueDemo1</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//目标：需要大家掌握常见的数据在代码中如何书写的？</span><br><br><span class="hljs-comment">//整数</span><br>System.out.println(<span class="hljs-number">666</span>);<br>System.out.println(-<span class="hljs-number">777</span>);<br><br><span class="hljs-comment">//小数</span><br>System.out.println(<span class="hljs-number">1.93</span>);<br>System.out.println(-<span class="hljs-number">3.71</span>);<br><br><span class="hljs-comment">//字符串</span><br>System.out.println(<span class="hljs-string">&quot;黑马程序员&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;尼古拉斯阿玮&quot;</span>);<br><br><span class="hljs-comment">//字符</span><br>System.out.println(<span class="hljs-string">&#x27;男&#x27;</span>);<br>System.out.println(<span class="hljs-string">&#x27;女&#x27;</span>);<br><br><span class="hljs-comment">//布尔</span><br>System.out.println(<span class="hljs-literal">true</span>);<br>System.out.println(<span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">//空</span><br><span class="hljs-comment">//细节：null不能直接打印的。</span><br><span class="hljs-comment">//如果我们要打印null，那么只能用字符串的形式进行打印</span><br>System.out.println(<span class="hljs-string">&quot;null&quot;</span>);<br><br>&#125;<br>&#125; <br></code></pre></td></tr></table></figure><h3 id="3-制表符-t"><a href="#3-制表符-t" class="headerlink" title="3.制表符(\t)"></a>3.制表符(\t)</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103172724914.png" alt="image-20230103172724914"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ValueDemo2</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//目标：熟悉制表符的基本用法</span><br>System.out.println(<span class="hljs-string">&quot;name&quot;</span> + <span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-string">&quot;age&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;tom&quot;</span> + <span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-string">&quot;23&quot;</span>);<br>&#125;<br>&#125; <br></code></pre></td></tr></table></figure><h2 id="7-变量"><a href="#7-变量" class="headerlink" title="7.变量"></a>7.变量</h2><h3 id="1-使用场景及概念"><a href="#1-使用场景及概念" class="headerlink" title="1.使用场景及概念"></a>1.使用场景及概念</h3><blockquote><p>当某个数据经常发生改变时，我们也可以用变量存储。当数据变化时，只要修改变量里面记录的值即可。</p></blockquote><h3 id="2-变量定义格式"><a href="#2-变量定义格式" class="headerlink" title="2.变量定义格式"></a>2.变量定义格式</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103173418094.png" alt="image-20230103173418094"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//定义一个整数类型的变量</span><br><span class="hljs-comment">//数据类型 变量名 = 数据值;</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">16</span>;<br>System.out.println(a);<span class="hljs-comment">//16</span><br><br><span class="hljs-comment">//定义一个小数类型的变量</span><br><span class="hljs-type">double</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">10.1</span>;<br>System.out.println(b);<span class="hljs-comment">//10.1</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-变量的使用方式"><a href="#3-变量的使用方式" class="headerlink" title="3.变量的使用方式"></a>3.变量的使用方式</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103184549254.png" alt="image-20230103184549254"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableDemo2</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//1.变量名不允许重复</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-comment">//int a = 20;</span><br>System.out.println(a);<br><span class="hljs-comment">//2.一条语句可以定义多个变量</span><br><span class="hljs-comment">//int a = 10, b = 20, c = 20,d = 20;</span><br><span class="hljs-comment">//3.变量在使用之前必须要赋值</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">30</span>;<br>System.out.println(a);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-变量的注意事项"><a href="#4-变量的注意事项" class="headerlink" title="4.变量的注意事项"></a>4.变量的注意事项</h3><blockquote><ul><li>变量名不能重复</li><li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li><li>变量在使用之前必须要赋值。</li><li>建议:以后在定义变量的时候，请直接赋值</li></ul></blockquote><h3 id="5-变量小结"><a href="#5-变量小结" class="headerlink" title="5.变量小结"></a>5.变量小结</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103185550682.png" alt="image-20230103185550682"></p><h3 id="6-变量案例"><a href="#6-变量案例" class="headerlink" title="6.变量案例"></a>6.变量案例</h3><blockquote><p>案例需求：</p><p>说出公交车到终点站之后，车上一共有多少乘客？ 一开始没有乘客。</p><p>第一站：上去一位乘客，没有下来乘客。</p><p>第二站：上去两位乘客，下来一位乘客。</p><p>第三站：上去两位乘客，下来一位乘客。</p><p>第四站：没有上去乘客，下来一位乘客。</p><p>第五站：上去一位乘客，没有下来乘客。</p><p>问：到了终点站之后，车上一共多少乘客？</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest1</span>&#123;<br><span class="hljs-comment">//主入口</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//一开始没有乘客。</span><br><span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-comment">//第一站：上去一位乘客</span><br><span class="hljs-comment">//在原有的基础上 + 1</span><br>count = count + <span class="hljs-number">1</span>;<br><span class="hljs-comment">//System.out.println(count);</span><br><span class="hljs-comment">//第二站：上去两位乘客，下来一位乘客</span><br>count = count + <span class="hljs-number">2</span> - <span class="hljs-number">1</span>; <br><span class="hljs-comment">//第三站：上去两位乘客，下来一位乘客</span><br>count = count + <span class="hljs-number">2</span> - <span class="hljs-number">1</span>;<br><span class="hljs-comment">//第四站：下来一位乘客</span><br>count = count - <span class="hljs-number">1</span>;<br><span class="hljs-comment">//第五站：上去一位乘客</span><br>count = count + <span class="hljs-number">1</span>;<br><span class="hljs-comment">//请问：到了终点站，车上一共几位乘客。</span><br>System.out.println(count);<span class="hljs-comment">//3</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="8-数据类型"><a href="#8-数据类型" class="headerlink" title="8.数据类型"></a>8.数据类型</h2><h3 id="1-数据类型分类"><a href="#1-数据类型分类" class="headerlink" title="1.数据类型分类"></a>1.数据类型分类</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103211854522.png" alt="image-20230103211854522"></p><h3 id="2-基本数据类型"><a href="#2-基本数据类型" class="headerlink" title="2.基本数据类型"></a>2.基本数据类型</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103213318383.png" alt="image-20230103213318383"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableDemo3</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-comment">//1.定义byte类型的变量</span><br>        <span class="hljs-comment">//数据类型 变量名 = 数据值;</span><br>        <span class="hljs-type">byte</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>        System.out.println(a);<br><br>        <span class="hljs-comment">//2.定义short类型的变量</span><br>        <span class="hljs-type">short</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br>        System.out.println(b);<br><br>        <span class="hljs-comment">//3.定义int类型的变量</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-number">30</span>;<br>        System.out.println(c);<br><br>        <span class="hljs-comment">//4.定义long类型的变量</span><br>        <span class="hljs-type">long</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">123456789123456789L</span>;<br>        System.out.println(d);<br><br>        <span class="hljs-comment">//5.定义float类型的变量</span><br>        <span class="hljs-type">float</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> <span class="hljs-number">10.1F</span>;<br>        System.out.println(e);<br><br>        <span class="hljs-comment">//6.定义double类型的变量</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> <span class="hljs-number">20.3</span>;<br>        System.out.println(f);<br><br>        <span class="hljs-comment">//7.定义char类型的变量</span><br>        <span class="hljs-type">char</span> <span class="hljs-variable">g</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;a&#x27;</span>;<br>        System.out.println(g);<br><br>        <span class="hljs-comment">//8.定义boolean类型的变量</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>        System.out.println(h);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3.注意事项"></a>3.注意事项</h3><blockquote><ul><li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li><li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li><li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li><li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li><li>double &gt; float &gt; long &gt; int &gt; short &gt; byte</li></ul></blockquote><h3 id="4-数据类型案例"><a href="#4-数据类型案例" class="headerlink" title="4.数据类型案例"></a>4.数据类型案例</h3><p>需求</p><blockquote><p><strong>需求：定义5个变量记录老师的信息并打印</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest1</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//1.定义字符串类型的变量记录老师的姓名</span><br><span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;黑马谢广坤&quot;</span>;<br><span class="hljs-comment">//2.定义整数类型的变量记录老师的年龄</span><br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> <span class="hljs-number">18</span>;<br><span class="hljs-comment">//3.定义字符类型的变量记录老师的性别</span><br><span class="hljs-type">char</span> <span class="hljs-variable">gender</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;男&#x27;</span>;<br><span class="hljs-comment">//4.定义小数类型的变量记录老师的身高</span><br><span class="hljs-type">double</span> <span class="hljs-variable">height</span> <span class="hljs-operator">=</span> <span class="hljs-number">180.1</span>;<br><span class="hljs-comment">//5.定义布尔类型的变量记录老师的婚姻状况</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="9-标识符"><a href="#9-标识符" class="headerlink" title="9.标识符"></a>9.标识符</h2><h3 id="1-基本概念-1"><a href="#1-基本概念-1" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><blockquote><p>标识符:就是给类，方法，变量等起的名字。</p></blockquote><h3 id="2-硬性要求"><a href="#2-硬性要求" class="headerlink" title="2.硬性要求"></a>2.硬性要求</h3><blockquote><ul><li>必须由数字、字母、下划线_、美元符号$组成。</li><li>数字不能开头</li><li>不能是关键字</li><li>区分大小写的</li></ul></blockquote><h3 id="3-小驼峰命名法"><a href="#3-小驼峰命名法" class="headerlink" title="3.小驼峰命名法"></a>3.小驼峰命名法</h3><blockquote><p>适用于变量名和方法名</p><ul><li><p>如果是一个单词，那么全部小写，比如：name</p></li><li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p></li></ul></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103220819536.png" alt="image-20230103220819536"></p><h3 id="4-大驼峰命名法"><a href="#4-大驼峰命名法" class="headerlink" title="4.大驼峰命名法"></a>4.大驼峰命名法</h3><blockquote><p>适用于类名</p><ul><li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p></li><li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p></li></ul><p>不管起什么名字，都要做到见名知意</p></blockquote><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230103220915015.png" alt="image-20230103220915015"></p><h2 id="10-键盘录入"><a href="#10-键盘录入" class="headerlink" title="10.键盘录入"></a>10.键盘录入</h2><h3 id="1-基本过程"><a href="#1-基本过程" class="headerlink" title="1.基本过程"></a>1.基本过程</h3><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104122446756.png" alt="image-20230104122446756"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//导包，其实就是先找到Scanner这个类在哪</span><br><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo1</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-comment">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span><br><span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><span class="hljs-comment">//3.接收数据</span><br><span class="hljs-comment">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span><br>System.out.println(<span class="hljs-string">&quot;请输入一个数字&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> sc.nextInt();<br>System.out.println(i);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="11-集成开发工具IDEA"><a href="#11-集成开发工具IDEA" class="headerlink" title="11.集成开发工具IDEA"></a>11.集成开发工具IDEA</h2><h3 id="1-IDEA中层级结构介绍"><a href="#1-IDEA中层级结构介绍" class="headerlink" title="1.IDEA中层级结构介绍"></a>1.IDEA中层级结构介绍</h3><h4 id="1-基本结构"><a href="#1-基本结构" class="headerlink" title="1.基本结构"></a>1.基本结构</h4><p><img src="https://typora-demo-rbq.oss-cn-hangzhou.aliyuncs.com/image-20230104123815334.png" alt="image-20230104123815334"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Java基础</tag>
      
      <tag>JDK，变量，数据类型</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
